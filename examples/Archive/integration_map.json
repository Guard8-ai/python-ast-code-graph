{
  "metadata": {
    "total_integration_points": 3466,
    "total_crossroads": 219,
    "analysis_timestamp": "2025-10-16T13:57:17.607358",
    "files_analyzed": 15,
    "components_found": 187
  },
  "codebase_tree": {
    "run_native_garak": {
      "type": "module",
      "fqn": "run_native_garak",
      "name": "run_native_garak",
      "line_range": [
        1,
        1
      ],
      "path": "run_native_garak.py",
      "docstring": "Native Garak Runner with Custom Rate-Limited Generator\n\nExecutes Garak natively with the custom RateLimitedOpenAIGenerator for comprehensive\nsecurity testing across all major probes.\n\nUsage:\n    python run_native_garak.py --model gpt-3.5-turbo --probe promptinject --full\n    python run_native_garak.py --model gpt-4o --probe all --full --budget 500000\n    python run_native_garak.py --model gpt-3.5-turbo --probe promptinject dan --dry-run",
      "children": {
        "parse_args": "run_native_garak.parse_args",
        "get_rate_limits": "run_native_garak.get_rate_limits",
        "expand_probe_selection": "run_native_garak.expand_probe_selection",
        "run_garak_probe": "run_native_garak.run_garak_probe",
        "generate_summary": "run_native_garak.generate_summary",
        "main": "run_native_garak.main"
      },
      "imports": []
    },
    "verify_setup": {
      "type": "module",
      "fqn": "verify_setup",
      "name": "verify_setup",
      "line_range": [
        1,
        1
      ],
      "path": "verify_setup.py",
      "docstring": "Verification Script - Test OpenAI API Integration\n\nThis script verifies that:\n1. OpenAI package is installed\n2. API key is configured\n3. Basic API calls work\n4. Rate limiting integration works\n\nUsage:\n    # Set your API key first:\n    export OPENAI_API_KEY='your-key-here'\n\n    # Run verification:\n    python verify_setup.py",
      "children": {
        "check_openai_package": "verify_setup.check_openai_package",
        "check_api_key": "verify_setup.check_api_key",
        "test_basic_api_call": "verify_setup.test_basic_api_call",
        "test_with_rate_limiting": "verify_setup.test_with_rate_limiting",
        "GarakStyleGenerator": "verify_setup.GarakStyleGenerator",
        "TestProbe": "verify_setup.TestProbe",
        "main": "verify_setup.main"
      },
      "imports": []
    },
    "test_multiple_probes": {
      "type": "module",
      "fqn": "test_multiple_probes",
      "name": "test_multiple_probes",
      "line_range": [
        1,
        1
      ],
      "path": "test_multiple_probes.py",
      "docstring": "Test Multiple Garak Probes with Rate Limiting\n\nThis script tests the rate-aware wrapper with multiple probe types:\n- PromptInject (HijackHateHumans)\n- DAN (Dan_11_0 jailbreak)\n- RealToxicityPrompts\n- Exploitation (JinjaInjection, SQLInjectionEcho)\n- Grandma (Win10, Slurs, Substances)\n\nUsage:\n    # Run ALL probes with model presets\n    python test_multiple_probes.py --model gpt-3.5-turbo --probe all\n    python test_multiple_probes.py --model gpt-4o --probe all --full\n\n    # Run single probe\n    python test_multiple_probes.py --model gpt-3.5-turbo --probe promptinject --full\n    python test_multiple_probes.py --model gpt-3.5-turbo --probe dan --full\n\n    # Run MULTIPLE specific probes together\n    python test_multiple_probes.py --model gpt-3.5-turbo --probe promptinject toxic --full\n    python test_multiple_probes.py --model gpt-4o --probe dan exploitation grandma --full\n\n    # Custom limits (override model presets)\n    python test_multiple_probes.py --model gpt-4 --probe all --budget 50000 --rpm 200 --tpm 100000\n\n    # Dry run (no API calls)\n    python test_multiple_probes.py --model gpt-3.5-turbo --probe all --dry-run",
      "children": {
        "RateAwareGarakProbe": "test_multiple_probes.RateAwareGarakProbe",
        "MockGenerator": "test_multiple_probes.MockGenerator",
        "OpenAIGeneratorWrapper": "test_multiple_probes.OpenAIGeneratorWrapper",
        "test_promptinject": "test_multiple_probes.test_promptinject",
        "test_dan": "test_multiple_probes.test_dan",
        "test_realtoxicity": "test_multiple_probes.test_realtoxicity",
        "SimpleToxicityDetector": "test_multiple_probes.SimpleToxicityDetector",
        "test_exploitation": "test_multiple_probes.test_exploitation",
        "JinjaDetector": "test_multiple_probes.JinjaDetector",
        "SQLiDetector": "test_multiple_probes.SQLiDetector",
        "test_grandma": "test_multiple_probes.test_grandma",
        "ProductKeyDetector": "test_multiple_probes.ProductKeyDetector",
        "main": "test_multiple_probes.main"
      },
      "imports": []
    },
    "example_probe": {
      "type": "module",
      "fqn": "example_probe",
      "name": "example_probe",
      "line_range": [
        1,
        1
      ],
      "path": "example_probe.py",
      "docstring": "Example Rate-Aware Security Probe\n\nThis demonstrates how to create a custom security probe that automatically\nrespects rate limits and token budgets.\n\nUsage:\n    python example_probe.py --model openai --model-name gpt-3.5-turbo --budget 100000",
      "children": {
        "SecurityJailbreakProbe": "example_probe.SecurityJailbreakProbe",
        "AdaptiveProbe": "example_probe.AdaptiveProbe",
        "BatchProbe": "example_probe.BatchProbe",
        "MockGenerator": "example_probe.MockGenerator"
      },
      "imports": []
    },
    "test_real_api": {
      "type": "module",
      "fqn": "test_real_api",
      "name": "test_real_api",
      "line_range": [
        1,
        1
      ],
      "path": "test_real_api.py",
      "docstring": "Test Script with Real OpenAI API Calls\n\nThis script demonstrates using the rate-aware probe system with\nreal OpenAI API calls against different models.\n\nUsage:\n    # Test with gpt-3.5-turbo\n    python test_real_api.py --model gpt-3.5-turbo --prompts 5\n\n    # Test with gpt-4o\n    python test_real_api.py --model gpt-4o --prompts 3\n\n    # Verbose mode - see prompts and responses in real-time\n    python test_real_api.py --model gpt-3.5-turbo --prompts 3 --verbose\n\n    # Save logs to file\n    python test_real_api.py --model gpt-3.5-turbo --prompts 5 --verbose --log-file my_test.log\n\n    # Custom budget and rate limits\n    python test_real_api.py --model gpt-3.5-turbo --prompts 10 --budget 50000 --rpm 200",
      "children": {
        "OpenAIGenerator": "test_real_api.OpenAIGenerator",
        "SecurityTestProbe": "test_real_api.SecurityTestProbe",
        "main": "test_real_api.main"
      },
      "imports": []
    },
    "quick_start": {
      "type": "module",
      "fqn": "quick_start",
      "name": "quick_start",
      "line_range": [
        1,
        1
      ],
      "path": "quick_start.py",
      "docstring": "Quick Start Script - Demonstrate Rate-Aware Probe Usage\n\nThis script demonstrates how to:\n1. Configure a probe for your OpenAI tier\n2. Set up rate limiting and budget tracking\n3. Run a scan that respects limits\n4. Monitor progress in real-time\n\nUsage:\n    python quick_start.py",
      "children": {
        "QuickStartProbe": "quick_start.QuickStartProbe",
        "main": "quick_start.main",
        "MockGenerator": "quick_start.MockGenerator"
      },
      "imports": []
    },
    "run_promptinject_garak": {
      "type": "module",
      "fqn": "run_promptinject_garak",
      "name": "run_promptinject_garak",
      "line_range": [
        1,
        1
      ],
      "path": "run_promptinject_garak.py",
      "docstring": "Run PromptInject Scan with Rate Limiting - Using Garak's Detectors\n\nThis script runs Garak's PromptInject probe with rate limiting and budget tracking,\nusing Garak's native detector system.\n\nKey features:\n- Uses Garak's Attempt objects and detector system (no custom detection)\n- Adds rate limiting (RPM/TPM) on top of Garak\n- Adds token budget tracking\n- Minimal changes to Garak code\n\nUsage:\n    # Basic scan\n    python run_promptinject_garak.py --model gpt-3.5-turbo --limit 50\n\n    # Full scan with verbose output\n    python run_promptinject_garak.py --model gpt-3.5-turbo --full --verbose\n\n    # Scan gpt-4o\n    python run_promptinject_garak.py --model gpt-4o --limit 100",
      "children": {
        "RateAwarePromptInjectGarak": "run_promptinject_garak.RateAwarePromptInjectGarak",
        "OpenAIGeneratorWrapper": "run_promptinject_garak.OpenAIGeneratorWrapper",
        "main": "run_promptinject_garak.main"
      },
      "imports": []
    },
    "run_all_probes_organized": {
      "type": "module",
      "fqn": "run_all_probes_organized",
      "name": "run_all_probes_organized",
      "line_range": [
        1,
        1
      ],
      "path": "run_all_probes_organized.py",
      "docstring": "Comprehensive Garak Runner with Rate Limiting and Organized Results\n\nRuns ALL Garak probes with ALL prompts while controlling request rates and token usage.\nResults are organized in separate folders by probe name.\n\nUsage:\n    python run_all_probes_organized.py --model gpt-3.5-turbo --rpm 500 --tpm 200000 --budget 500000\n    python run_all_probes_organized.py --model gpt-4o --probes promptinject dan --rpm 300 --tpm 400000",
      "children": {
        "run_garak_with_rate_limiting": "run_all_probes_organized.run_garak_with_rate_limiting",
        "generate_final_summary": "run_all_probes_organized.generate_final_summary",
        "parse_args": "run_all_probes_organized.parse_args",
        "main": "run_all_probes_organized.main"
      },
      "imports": []
    },
    "ast_code_analysis": {
      "type": "module",
      "fqn": "ast_code_analysis",
      "name": "ast_code_analysis",
      "line_range": [
        1,
        1
      ],
      "path": "ast_code_analysis.py",
      "docstring": "Deterministic AST-based code analysis for rate-limited OpenAI generator.\n\nThis script uses Python AST to analyze the code structure, dependencies,\nand implementation patterns without executing the code.",
      "children": {
        "ClassInfo": "ast_code_analysis.ClassInfo",
        "FunctionInfo": "ast_code_analysis.FunctionInfo",
        "ModuleInfo": "ast_code_analysis.ModuleInfo",
        "ASTCodeAnalyzer": "ast_code_analysis.ASTCodeAnalyzer",
        "analyze_rate_limiter": "ast_code_analysis.analyze_rate_limiter",
        "analyze_architecture": "ast_code_analysis.analyze_architecture",
        "generate_report": "ast_code_analysis.generate_report"
      },
      "imports": []
    },
    "run_promptinject_scan": {
      "type": "module",
      "fqn": "run_promptinject_scan",
      "name": "run_promptinject_scan",
      "line_range": [
        1,
        1
      ],
      "path": "run_promptinject_scan.py",
      "docstring": "Run PromptInject Scan with Rate Limiting\n\nThis script runs a full Garak PromptInject scan against OpenAI models\nwith automatic rate limiting and budget tracking.\n\nUsage:\n    # Basic scan with gpt-3.5-turbo\n    python run_promptinject_scan.py --model gpt-3.5-turbo\n\n    # Scan with gpt-4o\n    python run_promptinject_scan.py --model gpt-4o\n\n    # Verbose mode - see all prompts and responses in real-time\n    python run_promptinject_scan.py --model gpt-3.5-turbo --verbose\n\n    # Save logs to custom file\n    python run_promptinject_scan.py --model gpt-3.5-turbo --verbose --log-file my_scan.log\n\n    # Custom configuration\n    python run_promptinject_scan.py --model gpt-3.5-turbo --budget 500000 --rpm 200 --limit 100\n\n    # Full scan (no prompt limit)\n    python run_promptinject_scan.py --model gpt-3.5-turbo --full",
      "children": {
        "RateAwarePromptInject": "run_promptinject_scan.RateAwarePromptInject",
        "OpenAIGeneratorWrapper": "run_promptinject_scan.OpenAIGeneratorWrapper",
        "main": "run_promptinject_scan.main"
      },
      "imports": []
    },
    "tier_config": {
      "type": "module",
      "fqn": "tier_config",
      "name": "tier_config",
      "line_range": [
        1,
        1
      ],
      "path": "tier_config.py",
      "docstring": "OpenAI Tier Configuration Helper\n\nAutomatically detect or configure appropriate rate limits based on OpenAI tier.\n\nUsage:\n    from tier_config import TierConfig\n\n    config = TierConfig.for_tier(\"tier-1\")\n    probe.set_rate_limiter(config.rpm, config.tpm)",
      "children": {
        "TierConfig": "tier_config.TierConfig",
        "calculate_safe_parallelization": "tier_config.calculate_safe_parallelization",
        "estimate_scan_duration": "tier_config.estimate_scan_duration"
      },
      "imports": []
    },
    "rate_aware_base": {
      "type": "module",
      "fqn": "rate_aware_base",
      "name": "rate_aware_base",
      "line_range": [
        1,
        1
      ],
      "path": "rate_aware_base.py",
      "docstring": "Rate-Aware Probe Base Class\n\nThis module provides a base class for creating custom Garak probes that\nautomatically respect rate limits and token budgets.\n\nUsage:\n    from rate_aware_base import RateAwareProbe\n\n    class MyProbe(RateAwareProbe):\n        def probe(self, generator):\n            self.generator = generator\n            attempts = []\n\n            for prompt in self.prompts:\n                responses = self.generate_with_budget(prompt, generations=5)\n                for response in responses:\n                    attempts.append(self._make_attempt(prompt, response))\n\n            return attempts",
      "children": {
        "BudgetExceeded": "rate_aware_base.BudgetExceeded",
        "RateLimitWouldExceed": "rate_aware_base.RateLimitWouldExceed",
        "TokenTracker": "rate_aware_base.TokenTracker",
        "RateLimiter": "rate_aware_base.RateLimiter",
        "RateAwareProbe": "rate_aware_base.RateAwareProbe"
      },
      "imports": []
    },
    "garak_rate_wrapper": {
      "type": "module",
      "fqn": "garak_rate_wrapper",
      "name": "garak_rate_wrapper",
      "line_range": [
        1,
        1
      ],
      "path": "garak_rate_wrapper.py",
      "docstring": "External Monkey-Patching Wrapper for Garak Rate Limiting\n\nThis script monkey-patches Garak's OpenAI generator to add external rate limiting\nWITHOUT modifying Garak's code or creating custom generators.\n\nUsage:\n    python garak_rate_wrapper.py --model gpt-3.5-turbo --probes promptinject         --rpm 500 --tpm 200000 --budget 500000\n\nThis approach:\n- Works with ALL Garak probes and ALL prompts\n- Controls request rate (RPM) and token usage (TPM + total budget)\n- Monkey-patches at runtime (no Garak code changes needed)\n- Saves organized results by probe name",
      "children": {
        "RateLimiter": "garak_rate_wrapper.RateLimiter",
        "TokenBudgetTracker": "garak_rate_wrapper.TokenBudgetTracker",
        "create_rate_limited_wrapper": "garak_rate_wrapper.create_rate_limited_wrapper",
        "rate_limited_call_model": "garak_rate_wrapper.rate_limited_call_model",
        "wrapped_create": "garak_rate_wrapper.wrapped_create",
        "monkey_patch_garak": "garak_rate_wrapper.monkey_patch_garak",
        "run_garak": "garak_rate_wrapper.run_garak",
        "parse_args": "garak_rate_wrapper.parse_args",
        "main": "garak_rate_wrapper.main"
      },
      "imports": []
    },
    "garak_generators": {
      "type": "package",
      "children": {
        "ratelimited_openai": {
          "type": "module",
          "fqn": "garak_generators.ratelimited_openai",
          "name": "garak_generators.ratelimited_openai",
          "line_range": [
            1,
            1
          ],
          "path": "garak_generators/ratelimited_openai.py",
          "docstring": "Rate-limited OpenAI generator for API quota management.\n\nPHASE 1: Basic request rate limiting (RPS)\nPHASE 2: Token tracking, cost estimation (after Phase 1 verified)\n\nUsage:\nexport OPENAI_API_KEY=\"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\"\nexport RATE_LIMIT_RPS=22.5 && python -m garak     --model_type CUSTOM_ratelimited_openai     --model_name gpt-4o     --probes promptinject,dan,realtoxicityprompts     --parallel_attempts 1\n\nWhy this works:\n- \u2705 Generator-level rate limiting (not probe-level)\n- \u2705 Works for ALL probes (PromptInject, DAN, RealToxicity, etc)\n- \u2705 Global throttler (shared across all instances)\n- \u2705 Parallel-safe (thread lock)\n- \u2705 Easy to remove (CUSTOM_ prefix)",
          "children": {
            "SimpleThrottler": "garak_generators.ratelimited_openai.SimpleThrottler",
            "RateLimitedOpenAIGenerator": "garak_generators.ratelimited_openai.RateLimitedOpenAIGenerator"
          },
          "imports": []
        }
      }
    }
  },
  "global_integration_map": {
    "crossroads": [
      {
        "id": "rate_aware_base_self_junction",
        "components": [
          "rate_aware_base",
          "self"
        ],
        "integration_count": 175,
        "criticality": "high"
      },
      {
        "id": "logging_test_real_api_junction",
        "components": [
          "logging",
          "test_real_api"
        ],
        "integration_count": 86,
        "criticality": "high"
      },
      {
        "id": "logging_run_promptinject_garak_junction",
        "components": [
          "logging",
          "run_promptinject_garak"
        ],
        "integration_count": 86,
        "criticality": "high"
      },
      {
        "id": "logging_run_promptinject_scan_junction",
        "components": [
          "logging",
          "run_promptinject_scan"
        ],
        "integration_count": 82,
        "criticality": "high"
      },
      {
        "id": "example_probe_self_junction",
        "components": [
          "example_probe",
          "self"
        ],
        "integration_count": 72,
        "criticality": "high"
      },
      {
        "id": "run_promptinject_garak_self_junction",
        "components": [
          "run_promptinject_garak",
          "self"
        ],
        "integration_count": 70,
        "criticality": "high"
      },
      {
        "id": "ast_code_analysis_self_junction",
        "components": [
          "ast_code_analysis",
          "self"
        ],
        "integration_count": 67,
        "criticality": "high"
      },
      {
        "id": "f_run_all_probes_organized_junction",
        "components": [
          "f",
          "run_all_probes_organized"
        ],
        "integration_count": 64,
        "criticality": "high"
      },
      {
        "id": "self_test_multiple_probes_junction",
        "components": [
          "self",
          "test_multiple_probes"
        ],
        "integration_count": 62,
        "criticality": "high"
      },
      {
        "id": "print_verify_setup_junction",
        "components": [
          "print",
          "verify_setup"
        ],
        "integration_count": 60,
        "criticality": "high"
      },
      {
        "id": "run_promptinject_scan_self_junction",
        "components": [
          "run_promptinject_scan",
          "self"
        ],
        "integration_count": 58,
        "criticality": "high"
      },
      {
        "id": "logging_test_multiple_probes_junction",
        "components": [
          "logging",
          "test_multiple_probes"
        ],
        "integration_count": 50,
        "criticality": "high"
      },
      {
        "id": "garak_rate_wrapper_self_junction",
        "components": [
          "garak_rate_wrapper",
          "self"
        ],
        "integration_count": 49,
        "criticality": "high"
      },
      {
        "id": "f_run_native_garak_junction",
        "components": [
          "f",
          "run_native_garak"
        ],
        "integration_count": 48,
        "criticality": "high"
      },
      {
        "id": "probe_test_multiple_probes_junction",
        "components": [
          "probe",
          "test_multiple_probes"
        ],
        "integration_count": 48,
        "criticality": "high"
      },
      {
        "id": "garak_test_multiple_probes_junction",
        "components": [
          "garak",
          "test_multiple_probes"
        ],
        "integration_count": 46,
        "criticality": "high"
      },
      {
        "id": "print_quick_start_junction",
        "components": [
          "print",
          "quick_start"
        ],
        "integration_count": 46,
        "criticality": "high"
      },
      {
        "id": "self_test_real_api_junction",
        "components": [
          "self",
          "test_real_api"
        ],
        "integration_count": 44,
        "criticality": "high"
      },
      {
        "id": "logging_quick_start_junction",
        "components": [
          "logging",
          "quick_start"
        ],
        "integration_count": 44,
        "criticality": "high"
      },
      {
        "id": "print_test_multiple_probes_junction",
        "components": [
          "print",
          "test_multiple_probes"
        ],
        "integration_count": 42,
        "criticality": "high"
      },
      {
        "id": "garak_rate_wrapper_logger_junction",
        "components": [
          "garak_rate_wrapper",
          "logger"
        ],
        "integration_count": 42,
        "criticality": "high"
      },
      {
        "id": "ast_ast_code_analysis_junction",
        "components": [
          "ast",
          "ast_code_analysis"
        ],
        "integration_count": 40,
        "criticality": "high"
      },
      {
        "id": "args_run_promptinject_garak_junction",
        "components": [
          "args",
          "run_promptinject_garak"
        ],
        "integration_count": 39,
        "criticality": "high"
      },
      {
        "id": "args_run_promptinject_scan_junction",
        "components": [
          "args",
          "run_promptinject_scan"
        ],
        "integration_count": 39,
        "criticality": "high"
      },
      {
        "id": "example_probe_logging_junction",
        "components": [
          "example_probe",
          "logging"
        ],
        "integration_count": 38,
        "criticality": "high"
      },
      {
        "id": "print_run_native_garak_junction",
        "components": [
          "print",
          "run_native_garak"
        ],
        "integration_count": 36,
        "criticality": "high"
      },
      {
        "id": "f_run_promptinject_garak_junction",
        "components": [
          "f",
          "run_promptinject_garak"
        ],
        "integration_count": 36,
        "criticality": "high"
      },
      {
        "id": "print_run_promptinject_garak_junction",
        "components": [
          "print",
          "run_promptinject_garak"
        ],
        "integration_count": 35,
        "criticality": "high"
      },
      {
        "id": "print_run_promptinject_scan_junction",
        "components": [
          "print",
          "run_promptinject_scan"
        ],
        "integration_count": 35,
        "criticality": "high"
      },
      {
        "id": "logger_run_all_probes_organized_junction",
        "components": [
          "logger",
          "run_all_probes_organized"
        ],
        "integration_count": 34,
        "criticality": "high"
      },
      {
        "id": "f_run_promptinject_scan_junction",
        "components": [
          "f",
          "run_promptinject_scan"
        ],
        "integration_count": 30,
        "criticality": "high"
      },
      {
        "id": "quick_start_self_junction",
        "components": [
          "quick_start",
          "self"
        ],
        "integration_count": 27,
        "criticality": "high"
      },
      {
        "id": "ast_code_analysis_node_junction",
        "components": [
          "ast_code_analysis",
          "node"
        ],
        "integration_count": 27,
        "criticality": "high"
      },
      {
        "id": "ast_code_analysis_isinstance_junction",
        "components": [
          "ast_code_analysis",
          "isinstance"
        ],
        "integration_count": 26,
        "criticality": "high"
      },
      {
        "id": "print_test_real_api_junction",
        "components": [
          "print",
          "test_real_api"
        ],
        "integration_count": 25,
        "criticality": "high"
      },
      {
        "id": "logging_rate_aware_base_junction",
        "components": [
          "logging",
          "rate_aware_base"
        ],
        "integration_count": 23,
        "criticality": "high"
      },
      {
        "id": "parser_run_promptinject_garak_junction",
        "components": [
          "parser",
          "run_promptinject_garak"
        ],
        "integration_count": 22,
        "criticality": "high"
      },
      {
        "id": "parser_run_promptinject_scan_junction",
        "components": [
          "parser",
          "run_promptinject_scan"
        ],
        "integration_count": 22,
        "criticality": "high"
      },
      {
        "id": "args_test_multiple_probes_junction",
        "components": [
          "args",
          "test_multiple_probes"
        ],
        "integration_count": 21,
        "criticality": "high"
      },
      {
        "id": "garak_generators_logging_junction",
        "components": [
          "garak_generators",
          "logging"
        ],
        "integration_count": 21,
        "criticality": "high"
      },
      {
        "id": "results_test_multiple_probes_junction",
        "components": [
          "results",
          "test_multiple_probes"
        ],
        "integration_count": 20,
        "criticality": "high"
      },
      {
        "id": "ast_code_analysis_print_junction",
        "components": [
          "ast_code_analysis",
          "print"
        ],
        "integration_count": 20,
        "criticality": "high"
      },
      {
        "id": "args_run_native_garak_junction",
        "components": [
          "args",
          "run_native_garak"
        ],
        "integration_count": 19,
        "criticality": "high"
      },
      {
        "id": "args_test_real_api_junction",
        "components": [
          "args",
          "test_real_api"
        ],
        "integration_count": 19,
        "criticality": "high"
      },
      {
        "id": "garak_generators_self_junction",
        "components": [
          "garak_generators",
          "self"
        ],
        "integration_count": 19,
        "criticality": "high"
      },
      {
        "id": "append_ast_code_analysis_junction",
        "components": [
          "append",
          "ast_code_analysis"
        ],
        "integration_count": 18,
        "criticality": "high"
      },
      {
        "id": "len_test_multiple_probes_junction",
        "components": [
          "len",
          "test_multiple_probes"
        ],
        "integration_count": 17,
        "criticality": "high"
      },
      {
        "id": "print_run_all_probes_organized_junction",
        "components": [
          "print",
          "run_all_probes_organized"
        ],
        "integration_count": 17,
        "criticality": "high"
      },
      {
        "id": "parser_run_native_garak_junction",
        "components": [
          "parser",
          "run_native_garak"
        ],
        "integration_count": 16,
        "criticality": "high"
      },
      {
        "id": "self_verify_setup_junction",
        "components": [
          "self",
          "verify_setup"
        ],
        "integration_count": 16,
        "criticality": "high"
      },
      {
        "id": "parser_test_multiple_probes_junction",
        "components": [
          "parser",
          "test_multiple_probes"
        ],
        "integration_count": 16,
        "criticality": "high"
      },
      {
        "id": "example_probe_len_junction",
        "components": [
          "example_probe",
          "len"
        ],
        "integration_count": 16,
        "criticality": "high"
      },
      {
        "id": "parser_test_real_api_junction",
        "components": [
          "parser",
          "test_real_api"
        ],
        "integration_count": 16,
        "criticality": "high"
      },
      {
        "id": "len_run_promptinject_garak_junction",
        "components": [
          "len",
          "run_promptinject_garak"
        ],
        "integration_count": 16,
        "criticality": "high"
      },
      {
        "id": "args_run_all_probes_organized_junction",
        "components": [
          "args",
          "run_all_probes_organized"
        ],
        "integration_count": 16,
        "criticality": "high"
      },
      {
        "id": "len_run_promptinject_scan_junction",
        "components": [
          "len",
          "run_promptinject_scan"
        ],
        "integration_count": 16,
        "criticality": "high"
      },
      {
        "id": "args_garak_rate_wrapper_junction",
        "components": [
          "args",
          "garak_rate_wrapper"
        ],
        "integration_count": 16,
        "criticality": "high"
      },
      {
        "id": "garak_rate_wrapper_time_junction",
        "components": [
          "garak_rate_wrapper",
          "time"
        ],
        "integration_count": 15,
        "criticality": "high"
      },
      {
        "id": "response_test_real_api_junction",
        "components": [
          "response",
          "test_real_api"
        ],
        "integration_count": 14,
        "criticality": "high"
      },
      {
        "id": "garak_rate_wrapper_parser_junction",
        "components": [
          "garak_rate_wrapper",
          "parser"
        ],
        "integration_count": 14,
        "criticality": "high"
      },
      {
        "id": "sum_test_multiple_probes_junction",
        "components": [
          "sum",
          "test_multiple_probes"
        ],
        "integration_count": 13,
        "criticality": "high"
      },
      {
        "id": "output_test_multiple_probes_junction",
        "components": [
          "output",
          "test_multiple_probes"
        ],
        "integration_count": 12,
        "criticality": "high"
      },
      {
        "id": "parser_run_all_probes_organized_junction",
        "components": [
          "parser",
          "run_all_probes_organized"
        ],
        "integration_count": 12,
        "criticality": "high"
      },
      {
        "id": "ast_code_analysis_child_junction",
        "components": [
          "ast_code_analysis",
          "child"
        ],
        "integration_count": 12,
        "criticality": "high"
      },
      {
        "id": "datetime_rate_aware_base_junction",
        "components": [
          "datetime",
          "rate_aware_base"
        ],
        "integration_count": 12,
        "criticality": "high"
      },
      {
        "id": "garak_rate_wrapper_print_junction",
        "components": [
          "garak_rate_wrapper",
          "print"
        ],
        "integration_count": 11,
        "criticality": "high"
      },
      {
        "id": "example_probe_parser_junction",
        "components": [
          "example_probe",
          "parser"
        ],
        "integration_count": 10,
        "criticality": "medium"
      },
      {
        "id": "len_test_real_api_junction",
        "components": [
          "len",
          "test_real_api"
        ],
        "integration_count": 10,
        "criticality": "medium"
      },
      {
        "id": "probe_quick_start_junction",
        "components": [
          "probe",
          "quick_start"
        ],
        "integration_count": 10,
        "criticality": "medium"
      },
      {
        "id": "garak_run_promptinject_garak_junction",
        "components": [
          "garak",
          "run_promptinject_garak"
        ],
        "integration_count": 10,
        "criticality": "medium"
      },
      {
        "id": "print_tier_config_junction",
        "components": [
          "print",
          "tier_config"
        ],
        "integration_count": 10,
        "criticality": "medium"
      },
      {
        "id": "len_quick_start_junction",
        "components": [
          "len",
          "quick_start"
        ],
        "integration_count": 9,
        "criticality": "medium"
      },
      {
        "id": "config_quick_start_junction",
        "components": [
          "config",
          "quick_start"
        ],
        "integration_count": 9,
        "criticality": "medium"
      },
      {
        "id": "run_all_probes_organized_str_junction",
        "components": [
          "run_all_probes_organized",
          "str"
        ],
        "integration_count": 9,
        "criticality": "medium"
      },
      {
        "id": "ast_code_analysis_len_junction",
        "components": [
          "ast_code_analysis",
          "len"
        ],
        "integration_count": 9,
        "criticality": "medium"
      },
      {
        "id": "logging_tier_config_junction",
        "components": [
          "logging",
          "tier_config"
        ],
        "integration_count": 9,
        "criticality": "medium"
      },
      {
        "id": "join_run_native_garak_junction",
        "components": [
          "join",
          "run_native_garak"
        ],
        "integration_count": 8,
        "criticality": "medium"
      },
      {
        "id": "results_verify_setup_junction",
        "components": [
          "results",
          "verify_setup"
        ],
        "integration_count": 8,
        "criticality": "medium"
      },
      {
        "id": "RateAwareGarakProbe_test_multiple_probes_junction",
        "components": [
          "RateAwareGarakProbe",
          "test_multiple_probes"
        ],
        "integration_count": 8,
        "criticality": "medium"
      },
      {
        "id": "example_probe_probe_junction",
        "components": [
          "example_probe",
          "probe"
        ],
        "integration_count": 8,
        "criticality": "medium"
      },
      {
        "id": "run_promptinject_garak_sys_junction",
        "components": [
          "run_promptinject_garak",
          "sys"
        ],
        "integration_count": 8,
        "criticality": "medium"
      },
      {
        "id": "join_run_all_probes_organized_junction",
        "components": [
          "join",
          "run_all_probes_organized"
        ],
        "integration_count": 8,
        "criticality": "medium"
      },
      {
        "id": "run_promptinject_scan_sys_junction",
        "components": [
          "run_promptinject_scan",
          "sys"
        ],
        "integration_count": 8,
        "criticality": "medium"
      },
      {
        "id": "response_run_promptinject_scan_junction",
        "components": [
          "response",
          "run_promptinject_scan"
        ],
        "integration_count": 8,
        "criticality": "medium"
      },
      {
        "id": "len_rate_aware_base_junction",
        "components": [
          "len",
          "rate_aware_base"
        ],
        "integration_count": 8,
        "criticality": "medium"
      },
      {
        "id": "garak_rate_wrapper_rate_limiter_junction",
        "components": [
          "garak_rate_wrapper",
          "rate_limiter"
        ],
        "integration_count": 8,
        "criticality": "medium"
      },
      {
        "id": "sys_verify_setup_junction",
        "components": [
          "sys",
          "verify_setup"
        ],
        "integration_count": 7,
        "criticality": "medium"
      },
      {
        "id": "probe_verify_setup_junction",
        "components": [
          "probe",
          "verify_setup"
        ],
        "integration_count": 7,
        "criticality": "medium"
      },
      {
        "id": "sys_test_multiple_probes_junction",
        "components": [
          "sys",
          "test_multiple_probes"
        ],
        "integration_count": 7,
        "criticality": "medium"
      },
      {
        "id": "datetime_run_promptinject_garak_junction",
        "components": [
          "datetime",
          "run_promptinject_garak"
        ],
        "integration_count": 7,
        "criticality": "medium"
      },
      {
        "id": "len_run_all_probes_organized_junction",
        "components": [
          "len",
          "run_all_probes_organized"
        ],
        "integration_count": 7,
        "criticality": "medium"
      },
      {
        "id": "alias_ast_code_analysis_junction",
        "components": [
          "alias",
          "ast_code_analysis"
        ],
        "integration_count": 7,
        "criticality": "medium"
      },
      {
        "id": "datetime_run_promptinject_scan_junction",
        "components": [
          "datetime",
          "run_promptinject_scan"
        ],
        "integration_count": 7,
        "criticality": "medium"
      },
      {
        "id": "garak_rate_wrapper_logging_junction",
        "components": [
          "garak_rate_wrapper",
          "logging"
        ],
        "integration_count": 7,
        "criticality": "medium"
      },
      {
        "id": "garak_rate_wrapper_response_junction",
        "components": [
          "garak_rate_wrapper",
          "response"
        ],
        "integration_count": 7,
        "criticality": "medium"
      },
      {
        "id": "garak_generators_time_junction",
        "components": [
          "garak_generators",
          "time"
        ],
        "integration_count": 7,
        "criticality": "medium"
      },
      {
        "id": "run_native_garak_sys_junction",
        "components": [
          "run_native_garak",
          "sys"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "openai_verify_setup_junction",
        "components": [
          "openai",
          "verify_setup"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "traceback_verify_setup_junction",
        "components": [
          "traceback",
          "verify_setup"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "attempt_test_multiple_probes_junction",
        "components": [
          "attempt",
          "test_multiple_probes"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "response_test_multiple_probes_junction",
        "components": [
          "response",
          "test_multiple_probes"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "__init___example_probe_junction",
        "components": [
          "__init__",
          "example_probe"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "attempts_example_probe_junction",
        "components": [
          "attempts",
          "example_probe"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "example_probe_print_junction",
        "components": [
          "example_probe",
          "print"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "probe_test_real_api_junction",
        "components": [
          "probe",
          "test_real_api"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "quick_start_strip_junction",
        "components": [
          "quick_start",
          "strip"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "replace_run_promptinject_garak_junction",
        "components": [
          "replace",
          "run_promptinject_garak"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "response_run_promptinject_garak_junction",
        "components": [
          "response",
          "run_promptinject_garak"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "run_promptinject_garak_strftime_junction",
        "components": [
          "run_promptinject_garak",
          "strftime"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "probe_run_promptinject_garak_junction",
        "components": [
          "probe",
          "run_promptinject_garak"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "logging_run_all_probes_organized_junction",
        "components": [
          "logging",
          "run_all_probes_organized"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "garak_run_promptinject_scan_junction",
        "components": [
          "garak",
          "run_promptinject_scan"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "replace_run_promptinject_scan_junction",
        "components": [
          "replace",
          "run_promptinject_scan"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "run_promptinject_scan_strftime_junction",
        "components": [
          "run_promptinject_scan",
          "strftime"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "probe_run_promptinject_scan_junction",
        "components": [
          "probe",
          "run_promptinject_scan"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "cls_tier_config_junction",
        "components": [
          "cls",
          "tier_config"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "self_tier_config_junction",
        "components": [
          "self",
          "tier_config"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "budget_tracker_garak_rate_wrapper_junction",
        "components": [
          "budget_tracker",
          "garak_rate_wrapper"
        ],
        "integration_count": 6,
        "criticality": "medium"
      },
      {
        "id": "datetime_run_native_garak_junction",
        "components": [
          "datetime",
          "run_native_garak"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "run_native_garak_str_junction",
        "components": [
          "run_native_garak",
          "str"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "result_run_native_garak_junction",
        "components": [
          "result",
          "run_native_garak"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "response_verify_setup_junction",
        "components": [
          "response",
          "verify_setup"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "os_test_multiple_probes_junction",
        "components": [
          "os",
          "test_multiple_probes"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "args_example_probe_junction",
        "components": [
          "args",
          "example_probe"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "os_test_real_api_junction",
        "components": [
          "os",
          "test_real_api"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "os_run_promptinject_garak_junction",
        "components": [
          "os",
          "run_promptinject_garak"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "run_promptinject_garak_tier_config_junction",
        "components": [
          "run_promptinject_garak",
          "tier_config"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "pathlib_run_all_probes_organized_junction",
        "components": [
          "pathlib",
          "run_all_probes_organized"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "datetime_run_all_probes_organized_junction",
        "components": [
          "datetime",
          "run_all_probes_organized"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "result_run_all_probes_organized_junction",
        "components": [
          "result",
          "run_all_probes_organized"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "ast_code_analysis_module_info_junction",
        "components": [
          "ast_code_analysis",
          "module_info"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "os_run_promptinject_scan_junction",
        "components": [
          "os",
          "run_promptinject_scan"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "run_promptinject_scan_tier_config_junction",
        "components": [
          "run_promptinject_scan",
          "tier_config"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "rate_aware_base_threading_junction",
        "components": [
          "rate_aware_base",
          "threading"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "garak_rate_wrapper_subprocess_junction",
        "components": [
          "garak_rate_wrapper",
          "subprocess"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "garak_generators_threading_junction",
        "components": [
          "garak_generators",
          "threading"
        ],
        "integration_count": 5,
        "criticality": "medium"
      },
      {
        "id": "probe_output_dir_run_native_garak_junction",
        "components": [
          "probe_output_dir",
          "run_native_garak"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "run_native_garak_strftime_junction",
        "components": [
          "run_native_garak",
          "strftime"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "len_run_native_garak_junction",
        "components": [
          "len",
          "run_native_garak"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "logging_verify_setup_junction",
        "components": [
          "logging",
          "verify_setup"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "client_verify_setup_junction",
        "components": [
          "client",
          "verify_setup"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "argparse_test_multiple_probes_junction",
        "components": [
          "argparse",
          "test_multiple_probes"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "example_probe_range_junction",
        "components": [
          "example_probe",
          "range"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "sys_test_real_api_junction",
        "components": [
          "sys",
          "test_real_api"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "console_handler_test_real_api_junction",
        "components": [
          "console_handler",
          "test_real_api"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "log_handlers_test_real_api_junction",
        "components": [
          "log_handlers",
          "test_real_api"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "file_handler_test_real_api_junction",
        "components": [
          "file_handler",
          "test_real_api"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "lower_quick_start_junction",
        "components": [
          "lower",
          "quick_start"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "TierConfig_quick_start_junction",
        "components": [
          "TierConfig",
          "quick_start"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "argparse_run_promptinject_garak_junction",
        "components": [
          "argparse",
          "run_promptinject_garak"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "attempt_run_promptinject_garak_junction",
        "components": [
          "attempt",
          "run_promptinject_garak"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "console_handler_run_promptinject_garak_junction",
        "components": [
          "console_handler",
          "run_promptinject_garak"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "log_handlers_run_promptinject_garak_junction",
        "components": [
          "log_handlers",
          "run_promptinject_garak"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "file_handler_run_promptinject_garak_junction",
        "components": [
          "file_handler",
          "run_promptinject_garak"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "run_all_probes_organized_sys_junction",
        "components": [
          "run_all_probes_organized",
          "sys"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "probe_output_dir_run_all_probes_organized_junction",
        "components": [
          "probe_output_dir",
          "run_all_probes_organized"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "run_all_probes_organized_strftime_junction",
        "components": [
          "run_all_probes_organized",
          "strftime"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "run_all_probes_organized_sum_junction",
        "components": [
          "run_all_probes_organized",
          "sum"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "PROBE_CONFIGS_run_all_probes_organized_junction",
        "components": [
          "PROBE_CONFIGS",
          "run_all_probes_organized"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "ast_code_analysis_bases_junction",
        "components": [
          "ast_code_analysis",
          "bases"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "ast_code_analysis_calls_junction",
        "components": [
          "ast_code_analysis",
          "calls"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "analyzer_ast_code_analysis_junction",
        "components": [
          "analyzer",
          "ast_code_analysis"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "ast_code_analysis_concerns_junction",
        "components": [
          "ast_code_analysis",
          "concerns"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "argparse_run_promptinject_scan_junction",
        "components": [
          "argparse",
          "run_promptinject_scan"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "console_handler_run_promptinject_scan_junction",
        "components": [
          "console_handler",
          "run_promptinject_scan"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "log_handlers_run_promptinject_scan_junction",
        "components": [
          "log_handlers",
          "run_promptinject_scan"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "file_handler_run_promptinject_scan_junction",
        "components": [
          "file_handler",
          "run_promptinject_scan"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "os_tier_config_junction",
        "components": [
          "os",
          "tier_config"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "client_tier_config_junction",
        "components": [
          "client",
          "tier_config"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "int_tier_config_junction",
        "components": [
          "int",
          "tier_config"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "rate_aware_base_total_seconds_junction",
        "components": [
          "rate_aware_base",
          "total_seconds"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "garak_rate_wrapper_os_junction",
        "components": [
          "garak_rate_wrapper",
          "os"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "garak_generators_text_junction",
        "components": [
          "garak_generators",
          "text"
        ],
        "integration_count": 4,
        "criticality": "medium"
      },
      {
        "id": "run_native_garak_subprocess_junction",
        "components": [
          "run_native_garak",
          "subprocess"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "argparse_run_native_garak_junction",
        "components": [
          "argparse",
          "run_native_garak"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "json_run_native_garak_junction",
        "components": [
          "json",
          "run_native_garak"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "parent_run_native_garak_junction",
        "components": [
          "parent",
          "run_native_garak"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "run_native_garak_sum_junction",
        "components": [
          "run_native_garak",
          "sum"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "os_verify_setup_junction",
        "components": [
          "os",
          "verify_setup"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "len_verify_setup_junction",
        "components": [
          "len",
          "verify_setup"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "hasattr_test_multiple_probes_junction",
        "components": [
          "hasattr",
          "test_multiple_probes"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "generator_test_multiple_probes_junction",
        "components": [
          "generator",
          "test_multiple_probes"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "re_test_multiple_probes_junction",
        "components": [
          "re",
          "test_multiple_probes"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "test_multiple_probes_traceback_junction",
        "components": [
          "test_multiple_probes",
          "traceback"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "example_probe_super_junction",
        "components": [
          "example_probe",
          "super"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "argparse_example_probe_junction",
        "components": [
          "argparse",
          "example_probe"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "argparse_test_real_api_junction",
        "components": [
          "argparse",
          "test_real_api"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "datetime_test_real_api_junction",
        "components": [
          "datetime",
          "test_real_api"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "generator_test_real_api_junction",
        "components": [
          "generator",
          "test_real_api"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "test_real_api_traceback_junction",
        "components": [
          "test_real_api",
          "traceback"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "input_quick_start_junction",
        "components": [
          "input",
          "quick_start"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "quick_start_time_junction",
        "components": [
          "quick_start",
          "time"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "hasattr_run_promptinject_garak_junction",
        "components": [
          "hasattr",
          "run_promptinject_garak"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "generator_run_promptinject_garak_junction",
        "components": [
          "generator",
          "run_promptinject_garak"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "enumerate_run_promptinject_garak_junction",
        "components": [
          "enumerate",
          "run_promptinject_garak"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "run_promptinject_garak_traceback_junction",
        "components": [
          "run_promptinject_garak",
          "traceback"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "argparse_run_all_probes_organized_junction",
        "components": [
          "argparse",
          "run_all_probes_organized"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "run_all_probes_organized_subprocess_junction",
        "components": [
          "run_all_probes_organized",
          "subprocess"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "output_dir_run_all_probes_organized_junction",
        "components": [
          "output_dir",
          "run_all_probes_organized"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "ast_code_analysis_json_junction",
        "components": [
          "ast_code_analysis",
          "json"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "ast_code_analysis_pathlib_junction",
        "components": [
          "ast_code_analysis",
          "pathlib"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "ast_code_analysis_dataclasses_junction",
        "components": [
          "ast_code_analysis",
          "dataclasses"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "ast_code_analysis_list_junction",
        "components": [
          "ast_code_analysis",
          "list"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "hasattr_run_promptinject_scan_junction",
        "components": [
          "hasattr",
          "run_promptinject_scan"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "generator_run_promptinject_scan_junction",
        "components": [
          "generator",
          "run_promptinject_scan"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "enumerate_run_promptinject_scan_junction",
        "components": [
          "enumerate",
          "run_promptinject_scan"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "run_promptinject_scan_traceback_junction",
        "components": [
          "run_promptinject_scan",
          "traceback"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "openai_tier_config_junction",
        "components": [
          "openai",
          "tier_config"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "config_tier_config_junction",
        "components": [
          "config",
          "tier_config"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "rate_aware_base_time_junction",
        "components": [
          "rate_aware_base",
          "time"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "rate_aware_base_tiktoken_junction",
        "components": [
          "rate_aware_base",
          "tiktoken"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "rate_aware_base_sum_junction",
        "components": [
          "rate_aware_base",
          "sum"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "garak_rate_wrapper_sys_junction",
        "components": [
          "garak_rate_wrapper",
          "sys"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "argparse_garak_rate_wrapper_junction",
        "components": [
          "argparse",
          "garak_rate_wrapper"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "garak_rate_wrapper_hasattr_junction",
        "components": [
          "garak_rate_wrapper",
          "hasattr"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "garak_rate_wrapper_process_junction",
        "components": [
          "garak_rate_wrapper",
          "process"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "garak_generators_os_junction",
        "components": [
          "garak_generators",
          "os"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "garak_garak_generators_junction",
        "components": [
          "garak",
          "garak_generators"
        ],
        "integration_count": 3,
        "criticality": "medium"
      },
      {
        "id": "RateLimitedOpenAIGenerator_garak_generators_junction",
        "components": [
          "RateLimitedOpenAIGenerator",
          "garak_generators"
        ],
        "integration_count": 3,
        "criticality": "medium"
      }
    ],
    "critical_paths": [
      {
        "id": "path_test_multiple_probes",
        "entry_point": "test_multiple_probes",
        "call_count": 151,
        "complexity": "high"
      },
      {
        "id": "path_run_all_probes_organized",
        "entry_point": "run_all_probes_organized",
        "call_count": 126,
        "complexity": "high"
      },
      {
        "id": "path_run_native_garak",
        "entry_point": "run_native_garak",
        "call_count": 114,
        "complexity": "high"
      },
      {
        "id": "path_run_promptinject_garak",
        "entry_point": "run_promptinject_garak",
        "call_count": 110,
        "complexity": "high"
      },
      {
        "id": "path_run_promptinject_scan",
        "entry_point": "run_promptinject_scan",
        "call_count": 107,
        "complexity": "high"
      }
    ],
    "data_flows": [],
    "statistics": {
      "total_components": 187,
      "total_integration_points": 3466
    }
  }
}